{"ast":null,"code":"/*!\n * Built with Duet Design System\n */\nimport { r as registerInstance, c as createEvent, h, H as Host } from './index-eb374972.js';\nimport { g as getLocaleString } from './language-utils-344d894c.js';\nimport { i as inheritGlobalTheme } from './themeable-component-572685dd.js';\nimport './string-utils-2f1793b8.js';\nconst duetAlertCss = \"*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:block;width:100%;max-height:999px;border-radius:4px;transition:opacity 300ms ease, visibility 300ms ease, transform 300ms ease, max-height 300ms ease}:host(:focus){outline:0}:host(.user-is-tabbing:focus){border-radius:4px;box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}:host(.user-is-tabbing.duet-theme-turva:focus){box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}:host(.duet-alert-is-dismissed){max-height:0;visibility:hidden;opacity:0;transform:scale(0.98)}:host(.duet-alert-is-dismissed) .duet-alert{margin:0 !important}.duet-alert{margin-bottom:16px !important;position:relative;width:100%;padding:16px;font-family:\\\"localtapiola-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";font-size:1rem;font-weight:400;line-height:1.25;color:#00294d;background:#f2f8fb;border:1px solid #0077b3;border-radius:4px;transition:margin 100ms 300ms ease}.duet-alert.duet-p-0{padding:0 !important}.duet-alert.duet-m-0{margin:0 !important}.duet-alert.duet-theme-turva{font-family:\\\"turva-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";color:#171c3a;background:#f3f4f5;border-color:#171c3a}.duet-alert.warning{background:#fffbf4;border-color:#f7b228}.duet-alert.warning.duet-theme-turva{background:#fffaf3;border-color:#faa40f}.duet-alert.danger{background:#fdf4f7;border-color:#de2362}.duet-alert.danger.duet-theme-turva{background:#fdf4f3;border-color:#e02a0d}.duet-alert.success{background:#f2f9f7;border-color:#00875a}.duet-alert.success.duet-theme-turva{background:#f3f9f6;border-color:#08874e}.duet-alert-dismiss{position:absolute;top:2px;right:2px}.duet-alert-container{display:inline-flex;align-items:center;justify-content:center;width:100%;margin:0 auto !important}.duet-alert-container span{width:100%}.duet-alert-has-icon .duet-alert-container{margin-top:2px !important}.duet-alert-icon{display:inline-block;align-self:center;width:20px;min-width:20px;height:20px;margin:0 16px 0 0 !important}.duet-alert-icon duet-icon{width:20px;height:20px}.duet-alert-is-dismissible{padding:16px 48px 16px 16px;text-align:left}.duet-alert-is-dismissible .duet-alert-container{text-align:left}\";\nlet DuetAlert = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.duetDismiss = createEvent(this, \"duetDismiss\", 7);\n    /**\n     * Theme of the card.\n     */\n\n    this.theme = \"\";\n    /**\n     * State() variables\n     * Inlined decorator, alphabetical order.\n     */\n\n    this.isDismissed = false;\n    /**\n     * Property to change languageDefaults on the component.\n     * normally you would handle these strings on an application level and override @accessibleLabel when needed\n     * @default {fi: \"Sulje viesti\", sv: \"Stäng meddelandet\", en: \"Close the message\"}\n     */\n\n    this.accessibleLabelDefaults = {\n      fi: \"Sulje viesti\",\n      sv: \"Stäng meddelandet\",\n      en: \"Close the message\"\n    };\n    /**\n     * Adds accessible label for the dismissible alert close button.\n     * @default {fi: \"Sulje viesti\", sv: \"Stäng meddelandet\", en: \"Close the message\"}\n     */\n\n    this.accessibleLabel = getLocaleString(this.accessibleLabelDefaults);\n    /**\n     * Enable or disabled announcements by assistive technologies.\n     */\n\n    this.announcements = true;\n    /**\n     * Icon to display to the left of the content.\n     */\n\n    this.icon = \"\";\n    /**\n     * Controls the margin of the component.\n     */\n\n    this.margin = \"auto\";\n    /**\n     * Controls the padding of the component.\n     */\n\n    this.padding = \"auto\";\n    /**\n     * Style variation of the alert.\n     */\n\n    this.variation = \"default\";\n    /**\n     * Should a button be rendered to dismiss the alert?\n     */\n\n    this.dismissible = false;\n\n    this.handleDismiss = ev => {\n      this.isDismissed = true;\n      this.duetDismiss.emit({\n        component: \"duet-alert\",\n        originalEvent: ev\n      });\n    };\n  }\n  /**\n   * Component lifecycle events.\n   */\n\n\n  componentWillLoad() {\n    inheritGlobalTheme(this);\n  }\n\n  componentDidLoad() {\n    if (this.autoDismiss) {\n      this.timeoutID = setTimeout(() => this.handleDismiss(), this.autoDismiss);\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.timeoutID) {\n      clearTimeout(this.timeoutID);\n    }\n  }\n  /**\n   * render() function\n   * Always the last one in the class.\n   */\n\n\n  render() {\n    const closeColor = this.theme === \"turva\" ? \"secondary-turva\" : \"secondary\";\n    const role = this.variation === \"danger\" || this.variation === \"warning\" ? \"alert\" : \"status\";\n    return h(Host, {\n      tabindex: \"0\",\n      class: {\n        \"duet-theme-turva\": this.theme === \"turva\",\n        \"duet-alert-is-dismissed\": this.isDismissed\n      },\n      role: this.announcements ? role : undefined\n    }, h(\"div\", {\n      class: {\n        \"duet-alert\": true,\n        \"duet-alert-has-icon\": !!this.icon,\n        \"duet-alert-is-dismissible\": this.dismissible,\n        \"duet-p-0\": this.padding === \"none\",\n        \"duet-m-0\": this.margin === \"none\",\n        [this.variation]: true,\n        \"duet-theme-turva\": this.theme === \"turva\"\n      }\n    }, h(\"div\", {\n      class: \"duet-alert-container\"\n    }, this.icon && h(\"div\", {\n      class: \"duet-alert-icon\"\n    }, h(\"duet-icon\", {\n      size: \"auto\",\n      name: this.icon,\n      color: \"currentColor\"\n    })), h(\"span\", null, h(\"slot\", null))), this.dismissible && h(\"div\", {\n      class: \"duet-alert-dismiss\"\n    }, h(\"duet-button\", {\n      variation: \"plain\",\n      accessibleLabel: this.accessibleLabel,\n      color: closeColor,\n      iconSize: \"medium\",\n      icon: \"navigation-close\",\n      iconOnly: true,\n      margin: \"none\",\n      theme: this.theme,\n      onClick: this.handleDismiss,\n      fixed: true\n    }))));\n  }\n\n};\nDuetAlert.style = duetAlertCss;\nexport { DuetAlert as duet_alert };","map":null,"metadata":{},"sourceType":"module"}