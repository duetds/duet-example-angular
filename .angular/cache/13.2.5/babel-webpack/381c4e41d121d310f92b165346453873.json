{"ast":null,"code":"/*!\n * Built with Duet Design System\n */\nimport { r as registerInstance, h, H as Host, g as getElement } from './index-795979f3.js';\nimport { c as createID } from './create-id-981107da.js';\nimport { g as getLocaleString } from './language-utils-344d894c.js';\nimport { i as inheritGlobalTheme } from './themeable-component-572685dd.js';\nimport './string-utils-2f1793b8.js';\nconst duetProgressCss = \"*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;width:100%;height:inherit}.duet-progress{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:block;width:100%;min-height:1px;}.duet-progress .progress-bar{position:relative;display:block;width:100%;height:inherit;min-height:1px;background-color:#f3f9fc;border-radius:0;box-shadow:none}.duet-theme-turva .duet-progress .progress-bar{background-color:#fcf3f4}.duet-progress .progress-bar>span{display:block;height:inherit;text-indent:-9999px;background-color:#0077b3;border-radius:0}.duet-theme-turva .duet-progress .progress-bar>span{background-color:#c60c30}.duet-progress progress[value]{display:flex;width:100%;height:inherit;min-height:1px;color:#0077b3;border:0 none;-webkit-appearance:none;-moz-appearance:none;appearance:none}.duet-theme-turva .duet-progress progress[value]{color:#c60c30}.duet-progress progress[value]::-webkit-progress-bar{background-color:#f3f9fc;border-radius:0}.duet-theme-turva .duet-progress progress[value]::-webkit-progress-bar{background-color:#fcf3f4}.duet-progress progress[value]::-webkit-progress-value{background-color:#0077b3;background-size:35px 20px, 100% 100%, 100% 100%;border-radius:0;-webkit-animation:animate-stripes 5s linear infinite;animation:animate-stripes 5s linear infinite}.duet-theme-turva .duet-progress progress[value]::-webkit-progress-value{background-color:#c60c30}.duet-progress progress[value] ::-moz-progress-bar{background-color:#f3f9fc}.duet-theme-turva .duet-progress progress[value] ::-moz-progress-bar{background-color:#fcf3f4}\";\nlet DuetProgress = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Own Properties\n     */\n\n    this.progressId = createID(\"DuetProgress\");\n    this.progressLabelId = createID(\"DuetProgressLabel\");\n    /**\n     * Defaults for accessibleLabel\n     */\n\n    this.accessibleLabelUploadDefaults = {\n      fi: [\"lähetys valmis\", \"lähetys käynnissä\"],\n      sv: [\"Uppladdningen är klar\", \"Uppladdning pågår\"],\n      en: [\"upload completed\", \"upload in progress\"]\n    };\n    /**\n     * Adds accessible label for upload in progress and upload complete states\n     * @default {fi: [\"lähetys valmis\", \"lähetys käynnissä\"],sv: [\"Uppladdningen är klar\", \"Uppladdning pågår\"], en:  [\"completed\", \"in progress\"]}\n     */\n\n    this.accessibleLabelUpload = getLocaleString(this.accessibleLabelUploadDefaults);\n    /**\n     * Progress of the bar, a value from 0-100\n     */\n\n    this.progress = 0;\n    /**\n     * Height of progressbar\n     */\n\n    this.height = \"10px\";\n    /**\n     * Theme of the input.\n     */\n\n    this.theme = \"\";\n  }\n  /**\n   * Component lifecycle events.\n   */\n\n\n  componentWillLoad() {\n    inheritGlobalTheme(this);\n  }\n  /**\n   * render() function\n   * Always the last one in the class.\n   */\n\n\n  render() {\n    return h(Host, null, h(\"div\", {\n      \"aria-live\": this.accessibleLabel ? \"polite\" : \"off\",\n      \"aria-hidden\": this.accessibleLabel ? \"false\" : \"true\",\n      \"aria-atomic\": \"true\",\n      style: {\n        height: this.height\n      },\n      id: this.progressId,\n      class: {\n        \"duet-progress\": true,\n        \"duet-progress-done\": this.progress === 100,\n        \"duet-progress-start\": this.progress === 0,\n        \"duet-progress-inprogress\": this.progress < 99 && this.progress !== 0,\n        \"duet-theme-turva\": this.theme === \"turva\"\n      }\n    }, h(\"duet-visually-hidden\", null, h(\"label\", {\n      htmlFor: this.progressLabelId\n    }, this.progress !== 0 && h(\"span\", null, this.accessibleLabel, \", \", this.accessibleLabelUpload[this.progress < 99 ? 1 : 0]))), this.caption && h(\"div\", {\n      class: \"duet-progress-caption\"\n    }, h(\"span\", null, this.caption)), h(\"progress\", {\n      id: this.progressLabelId,\n      \"aria-describedby\": this.accessibleDescribedBy,\n      role: \"progressbar\",\n      value: this.progress,\n      max: \"100\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\"\n    }, h(\"div\", {\n      class: \"progress-bar\"\n    }, h(\"span\", {\n      style: {\n        width: `${this.progress}%;`\n      }\n    }, \"Progress: \", this.progress, \"%\")))));\n  }\n\n  get element() {\n    return getElement(this);\n  }\n\n};\nDuetProgress.style = duetProgressCss;\nexport { DuetProgress as duet_progress };","map":null,"metadata":{},"sourceType":"module"}