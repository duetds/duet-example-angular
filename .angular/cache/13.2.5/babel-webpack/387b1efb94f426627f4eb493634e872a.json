{"ast":null,"code":"/*!\n * Built with Duet Design System\n */\nimport { r as registerInstance, h, H as Host } from './index-795979f3.js';\nlet DuetUploadAriaStatus = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * State() variables\n     */\n\n    this.statusMessage = null;\n    /**\n     * Status labels used in the component\n     */\n\n    this.statusMessageLabel = null;\n    /**\n     * Adds accessible label that is read aloud\n     */\n\n    this.accessibleAriaLive = \"polite\";\n    /**\n     * valid file amount\n     */\n\n    this.valid = undefined;\n    /**\n     * total files\n     */\n\n    this.total = undefined;\n    /**\n     * invalid file amount\n     */\n\n    this.invalid = undefined;\n    /**\n     * valid file amount\n     */\n\n    this.inprogress = undefined;\n    /**\n     * Private functions\n     */\n\n    this.replacePlaceHolders = statusString => {\n      const addFiles = amount => {\n        return amount > 1 ? `${amount} ${this.statusMessageLabel.files}` : `${amount} ${this.statusMessageLabel.file}`;\n      };\n\n      return statusString.replace(\"{filesUploaded}\", addFiles(this.valid)).replace(\"{filesInProgress}\", addFiles(this.inprogress)).replace(\"{filesTotal}\", addFiles(this.total)).replace(\"{filesWithErrors}\", addFiles(this.invalid));\n    };\n\n    this.getStatusMessage = () => {\n      const {\n        done,\n        inProgress,\n        doneWithErrors,\n        inProgressWithErrors\n      } = this.statusMessageLabel;\n      const hasErrors = this.invalid > 0;\n      const isInProgress = this.inprogress > 0;\n      const isInProgressWithErrors = this.inprogress > 0 && hasErrors;\n      const isDone = this.valid === this.total && !isInProgress && !hasErrors;\n      const isDoneWithErrors = this.valid + this.invalid === this.total && !isInProgress;\n\n      if (isDone) {\n        this.statusMessage = this.replacePlaceHolders(done);\n        return;\n      } else if (isInProgressWithErrors) {\n        this.statusMessage = this.replacePlaceHolders(inProgressWithErrors);\n        return;\n      } else if (isInProgress) {\n        this.statusMessage = this.replacePlaceHolders(inProgress);\n        return;\n      } else if (isDoneWithErrors) {\n        this.statusMessage = this.replacePlaceHolders(doneWithErrors);\n        return;\n      }\n\n      return;\n    };\n  }\n\n  watchHandler(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.getStatusMessage();\n    }\n  }\n  /**\n   * render() function\n   * Always the last one in the class.\n   */\n\n\n  render() {\n    return h(Host, {\n      role: \"status\",\n      \"aria-live\": \"assertive\",\n      \"aria-atomic\": \"true\",\n      \"aria-relevant\": \"all\"\n    }, h(\"duet-visually-hidden\", null, this.statusMessage));\n  }\n\n  static get watchers() {\n    return {\n      \"valid\": [\"watchHandler\"],\n      \"invalid\": [\"watchHandler\"],\n      \"inprogress\": [\"watchHandler\"],\n      \"total\": [\"watchHandler\"]\n    };\n  }\n\n};\nexport { DuetUploadAriaStatus as duet_upload_aria_status };","map":null,"metadata":{},"sourceType":"module"}