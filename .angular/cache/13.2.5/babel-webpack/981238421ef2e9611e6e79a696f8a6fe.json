{"ast":null,"code":"import _asyncToGenerator from \"/Users/klaushougesen/_repos/consulting/lahi/github/duet-example-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Built with Duet Design System\n */\nimport { r as registerInstance, c as createEvent, h, g as getElement } from './index-795979f3.js';\nimport { a as actionNewWindowSmall } from './action-new-window-small-1945be91.js';\nimport { D as DuetStringsExternalDefaults } from './common-strings-97e04e4b.js';\nimport { a as getLanguage, g as getLocaleString } from './language-utils-344d894c.js';\nimport { p as parsePossibleJSON } from './string-utils-2f1793b8.js';\nimport { i as inheritGlobalTheme } from './themeable-component-572685dd.js';\nconst duetHeroCss = \"*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:block;width:100%}.duet-hero{position:relative;display:block;width:100%;padding:48px 28px;font-family:\\\"localtapiola-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";font-size:1rem;font-style:normal;font-weight:400;line-height:1.5;text-decoration:none;text-shadow:none;text-transform:none;background:#00294d}.duet-hero.duet-p-0{padding:0 !important}.duet-hero.duet-m-0{margin:0 !important}.duet-hero.duet-hero-text-center{text-align:center !important}.duet-hero.duet-hero-light{padding-bottom:0 !important}@media (min-width: 62em){.duet-hero.duet-hero-light{padding-bottom:28px !important}}.duet-hero.duet-hero-with-image{padding-bottom:20px !important;margin-bottom:-36px}@media (min-width: 48em){.duet-hero.duet-hero-with-image{padding-bottom:28px !important}}@media (min-width: 62em){.duet-hero.duet-hero-with-image{padding-bottom:36px !important;margin-bottom:-20px}}.duet-hero.duet-hero-light,.duet-hero.duet-hero-with-image{color:#00294d;background-color:white;background-image:linear-gradient(#f3f9fc, #f9fcfe)}.duet-hero.duet-hero-light::before,.duet-hero.duet-hero-with-image::before{position:absolute;top:100%;left:0;z-index:-1;width:100%;height:400px;content:\\\"\\\";background-image:linear-gradient(#f9fcfe, white)}.duet-hero.duet-hero-light.duet-theme-turva,.duet-hero.duet-hero-with-image.duet-theme-turva{color:#171c3a;background-image:linear-gradient(#f5f5f7, #fafafb)}.duet-hero.duet-hero-light.duet-theme-turva::before,.duet-hero.duet-hero-with-image.duet-theme-turva::before{background-image:linear-gradient(#fafafb, white)}.duet-hero.duet-hero-gray{color:#00294d;background:#f5f8fa}.duet-hero.duet-hero-gray.duet-theme-turva{background:#f5f5f7}@media (min-width: 62em){.duet-hero.duet-hero-gray .duet-hero-text{display:inline-block;vertical-align:top}.duet-hero.duet-hero-gray .duet-hero-icon+.duet-hero-text{margin-left:28px}}@media (min-width: 62em){.duet-hero.duet-hero-gray-with-actions{padding-bottom:65.4545454545px}}@media (min-width: 62em){.duet-hero.duet-hero-gray-with-back{padding-top:72px}}.duet-hero.duet-theme-turva{font-family:\\\"turva-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";background:#c60c30}@media (min-width: 62em){.duet-hero{min-height:290px;padding:111.6px 56px;overflow:visible}}.duet-hero-icon{display:inline-block;vertical-align:top}@media (min-width: 62em){.duet-hero-icon{margin-top:-8px}}@media (min-width: 62em){.duet-hero-heading{margin-top:12px}}@media (min-width: 62em){.duet-hero-heading-has-pre{margin-top:0}}.duet-hero-wrapper{position:relative;width:100%;max-width:1110px;margin:0 auto;text-align:center}.duet-hero-left-align .duet-hero-wrapper{text-align:left}.duet-hero-with-image .duet-hero-wrapper{position:static}@media (min-width: 62em){.duet-hero-wrapper{text-align:left}}.duet-hero-text{max-width:50rem;margin:0 auto}.duet-hero-text-center .duet-hero-text{text-align:center !important}@media (min-width: 48em){.duet-hero-text{width:80%}.duet-hero-left-align .duet-hero-text{margin:0}}@media (min-width: 62em){.duet-hero-text{width:52%;max-width:none;margin-top:-10px;margin-left:0}.duet-hero-text-center .duet-hero-text{margin-left:auto}}.duet-hero:not(.duet-hero-with-image) .duet-hero-image{width:100%;max-width:400px;height:0;padding-bottom:50%;margin:28px auto 0;background-repeat:no-repeat;background-position:50% 50%;background-size:contain}@media (min-width: 36em){.duet-hero:not(.duet-hero-with-image) .duet-hero-image{padding-bottom:40%}}@media (min-width: 48em){.duet-hero:not(.duet-hero-with-image) .duet-hero-image{max-width:420px;padding-bottom:34%}.duet-hero-light .duet-hero:not(.duet-hero-with-image) .duet-hero-image{max-width:540px}}@media (min-width: 62em){.duet-hero:not(.duet-hero-with-image) .duet-hero-image{position:absolute;top:50%;right:0;padding-bottom:30%;margin:0;transform:translateY(-50%)}.duet-hero-light .duet-hero:not(.duet-hero-with-image) .duet-hero-image{right:-60px;padding-bottom:26%}.duet-hero-gray .duet-hero:not(.duet-hero-with-image) .duet-hero-image{right:-34px;padding-bottom:20%}}@media (min-width: 62em){.duet-hero-gray:not(.duet-hero-with-image) .duet-hero-image{right:-34px;padding-bottom:20%}}.duet-hero-image-wrapper{position:relative;width:80%;height:0;padding-bottom:80%;margin:-30px auto 36px;overflow:hidden;border-radius:28%;box-shadow:0 0 20px rgba(255, 255, 255, 0.5);transform:rotate(10deg)}.duet-theme-turva .duet-hero-image-wrapper{padding-bottom:68%;border-radius:44% 47% 38% 54%;transform:none}@media screen and (min-width: 440px){.duet-hero-image-wrapper{width:300px;padding-bottom:300px}.duet-theme-turva .duet-hero-image-wrapper{width:80%;padding-bottom:68%}}@media (min-width: 62em){.duet-hero-image-wrapper{position:absolute;top:-60px;right:-50px;width:470px;padding-bottom:470px;margin:0}.duet-theme-turva .duet-hero-image-wrapper{top:-40px;right:-80px;width:536px;padding-bottom:470px}}@media (min-width: 76.25em){.duet-hero-image-wrapper{top:-70px;right:-60px;width:600px;padding-bottom:600px}.duet-theme-turva .duet-hero-image-wrapper{top:-70px;right:-60px;width:650px;padding-bottom:600px}}@media screen and (min-width: 1450px){.duet-hero-image-wrapper{top:-70px;right:25px}.duet-theme-turva .duet-hero-image-wrapper{right:0}}.duet-hero-image-wrapper .duet-hero-image{position:absolute;top:-5%;left:-5%;width:110%;height:110%;background-repeat:no-repeat;background-position:50% 50%;background-size:cover;transform:rotate(-10deg)}.duet-theme-turva .duet-hero-image-wrapper .duet-hero-image{top:0;left:0;width:100%;height:100%;transform:none}.duet-hero-image-mask{position:relative;margin:-48px auto 0;overflow:hidden}@media (min-width: 62em){.duet-hero-image-mask{position:absolute;top:0;right:0;width:470px;height:460px;margin:0}}@media (min-width: 76.25em){.duet-hero-image-mask{width:650px;height:580px}}@media screen and (min-width: 1450px){.duet-hero-image-mask{right:50%;transform:translateX(110%)}.duet-theme-turva .duet-hero-image-mask{transform:translateX(108%)}}duet-heading+duet-button{margin-top:12px !important}.duet-hero-links{width:calc(100% + 56px);margin-top:48px;margin-left:-28px}.duet-hero-minimal .duet-hero-links{margin-top:28px}@media (min-width: 36em){.duet-hero-links{margin-top:72px}.duet-hero-minimal .duet-hero-links{margin-top:28px}}@media (min-width: 62em){.duet-hero-links{width:auto;margin:36px 0 0}.duet-hero-minimal .duet-hero-links{margin-top:28px}}.duet-hero-link{display:flex;align-items:center;width:100%;padding:16px 16px 8px;font-weight:600;-webkit-hyphens:auto;hyphens:auto;line-height:1.25;color:#0077b3;text-align:left;text-decoration:none;border-bottom:1px solid #e1e3e6;transition:background-color 300ms ease}.duet-hero-link:focus{outline:0;box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}.duet-theme-turva .duet-hero-link:focus,.duet-hero-link:focus.duet-theme-turva{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}.duet-hero-link:hover,.duet-hero-link:hover .duet-hero-action-arrow{color:#004d80 !important;background:transparent !important}.duet-theme-turva .duet-hero-link:hover,.duet-theme-turva .duet-hero-link:hover .duet-hero-action-arrow{color:#940925 !important}.duet-theme-turva .duet-hero-link{color:#c60c30}@media (min-width: 36em){.duet-hero-link{padding:16px 16px 16px 28px}}@media (min-width: 62em){.duet-hero-link{display:inline-flex;width:auto;max-width:350px;padding:0;margin:0 28px 16px 0;border:0;border-radius:4px}}.duet-hero-link:hover{background:rgba(0, 0, 0, 0.02)}@media (min-width: 62em){.duet-hero-link:hover{background:transparent}}.duet-hero-link:first-of-type{border-top:1px solid #e1e3e6}@media (min-width: 62em){.duet-hero-link:first-of-type{margin-top:0;border:0}}.duet-hero-link:last-of-type{margin-bottom:-48px}@media (min-width: 62em){.duet-hero-link:last-of-type{margin-right:0;margin-bottom:0}}.duet-hero-link span{margin-top:-8px}@media (min-width: 36em){.duet-hero-link span{margin:0}}.duet-hero-action-icon{margin-right:8px}@media (min-width: 36em){.duet-hero-action-icon{margin-right:12px}}.duet-hero-action-arrow{margin:0 0 0 8px;color:#0077b3}@media (max-width: 35.9375em){.duet-hero-action-arrow{margin-top:-9px}}.duet-theme-turva .duet-hero-action-arrow{color:#c60c30}.duet-hero-back{margin-bottom:28px !important;display:flex;align-items:center;justify-content:center}.duet-hero-left-align .duet-hero-back{align-items:self-start;justify-content:flex-start}@media (min-width: 36em){.duet-hero-back{margin-bottom:36px !important}.duet-hero-minimal .duet-hero-back{margin-bottom:28px !important}}@media (min-width: 62em){.duet-hero-back{display:block}}.duet-hero-pre{display:inline-block;width:auto;margin-right:8px}.duet-hero-pre+duet-heading{margin-top:0 !important}\";\nlet DuetHero = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.duetClick = createEvent(this, \"duetClick\", 7);\n    this.duetAnalytics = createEvent(this, \"duetAnalytics\", 7);\n    /**\n     * State() variables\n     * Inlined decorator, alphabetical order.\n     */\n\n    this.processedListItems = null;\n    this.processedActions = null;\n    this.processedBack = null;\n    /**\n     * Theme of the hero area.\n     */\n\n    this.theme = \"\";\n    /**\n     * The heading of the hero area, rendered in an H1 tag. P.S. you can control\n     * the level of the HTML heading by using “level” prop. If empty, heading\n     * will be hidden.\n     */\n\n    this.heading = \"\";\n    /**\n     * The headline shown before heading.\n     */\n\n    this.preHeading = \"\";\n    /**\n     * The level of the heading.\n     */\n\n    this.level = \"h1\";\n    /**\n     * The description of the hero area, rendered in a P tag. If empty, description\n     * will be hidden.\n     */\n\n    this.description = \"\";\n    /**\n     * Icon to display to the left of the button content. If empty, icon will be hidden.\n     */\n\n    this.icon = \"\";\n    /**\n     * Icon size for the button.\n     */\n\n    this.iconSize = \"medium\";\n    /**\n     * Show icon on the right side of the button content.\n     */\n\n    this.iconRight = false;\n    /**\n     * Icon to display to the left of the heading in gray hero area variation. If empty, icon will be hidden.\n     */\n\n    this.categoryIcon = \"\";\n    /**\n     * Icon color to use for the category icon that can be used in gray hero area variation.\n     */\n\n    this.categoryIconColor = \"category-pet\";\n    /**\n     * Text label shown inside the button. If empty, button will be hidden.\n     */\n\n    this.buttonLabel = \"\";\n    /**\n     * The currently active language. This setting changes the accessible labels to match the\n     * chosen language.\n     * @deprecated this is now handled via the html lang tag, and is no longer used - kept to avoid breaking changes and ease unit testing\n     * @default \"fi\"\n     */\n\n    this.language = getLanguage();\n    /**\n     * Defaults for accessibleLabelExternal\n     * @default {fi: \"Avautuu uuteen ikkunaan\",sv: \"Öppnas i nytt fönster\",en: \"Opens in a new window\"}\n     */\n\n    this.accessibleLabelExternalDefaults = DuetStringsExternalDefaults;\n    /**\n     * Adds accessible label for tooltip that is shown in external link (url & external have both been set)\n     * @default {fi: \"Avautuu uuteen ikkunaan\",sv: \"Öppnas i nytt fönster\",en: \"Opens in a new window\"}\n     */\n\n    this.accessibleLabelExternal = getLocaleString(this.accessibleLabelExternalDefaults);\n    /**\n     * URL that the button links to.\n     */\n\n    this.buttonUrl = \"#\";\n    /**\n     * ID for the button.\n     */\n\n    this.buttonId = \"\";\n    /**\n     * Centers the text in hero area.\n     */\n\n    this.textCenter = false;\n    /**\n     * Forces all items in the header to be leftAligned\n     * This can be used on mobiles to create leftAligned hero areas that either are only leftaligned on smaller devices\n     * or allways leftAligned (you must manually switch this parameter if you need special breakpoints)\n     * this nullifies textCenter prop\n     */\n\n    this.leftAlign = false;\n    /**\n     * URL of the image shown inside the hero area. The width of the displayed image\n     * should be 800px. Optimal aspect ratio is 3:2. When using “image” variation of\n     * Hero Area the required image size is 1200x1200px (1:1 ratio). If this\n     * property is left empty, image will be hidden.\n     */\n\n    this.image = \"\";\n    /**\n     * Style variation of the hero area.\n     */\n\n    this.variation = \"default\";\n    /**\n     * Component event handling.\n     */\n\n    this.handleClick = (ev, data) => {\n      if (data && data.analytics) {\n        this.duetAnalytics.emit({\n          component: \"duet-hero\",\n          analyticsId: data.analytics\n        });\n      }\n\n      this.emitChange(ev, data);\n    };\n  }\n  /**\n   * Component lifecycle events.\n   */\n\n\n  componentWillLoad() {\n    inheritGlobalTheme(this);\n    this.refresh();\n  }\n  /**\n   * Local methods.\n   */\n\n\n  refresh() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.processedListItems = parsePossibleJSON(_this.listItems);\n      _this.processedActions = parsePossibleJSON(_this.actions);\n      _this.processedBack = parsePossibleJSON(_this.back);\n    })();\n  }\n\n  emitChange(ev, data) {\n    if (!data) {\n      data = {};\n    }\n\n    if (this.buttonLabel) {\n      data.label = this.buttonLabel;\n      data.href = this.buttonUrl;\n      data.id = this.buttonId || \"No ID defined via buttonId prop\";\n    }\n\n    this.duetClick.emit({\n      originalEvent: ev,\n      data: data,\n      component: \"duet-hero\"\n    });\n  }\n  /**\n   * render() function\n   * Always the last one in the class.\n   */\n\n\n  render() {\n    const styles = {\n      backgroundImage: `url(${this.image})`\n    };\n    const buttonStyles = {\n      transform: \"translateX(-8px)\"\n    };\n    let buttonVariation = this.theme === \"turva\" ? \"negative\" : \"primary\";\n    let outlineColor = \"primary-blue\";\n    let textColor = \"gray-lightest\";\n    let buttonColor = \"primary\";\n\n    if (this.variation === \"light\" || this.variation === \"image\" || this.variation === \"gray\" || this.variation === \"minimal\") {\n      textColor = \"secondary\";\n\n      if (this.theme === \"turva\") {\n        textColor = \"secondary-turva\";\n        buttonVariation = \"primary\";\n        buttonColor = \"color-primary-turva\";\n        outlineColor = \"color-primary-turva\";\n      }\n    }\n\n    return h(\"div\", {\n      role: \"region\",\n      class: {\n        \"duet-hero\": true,\n        \"duet-theme-turva\": this.theme === \"turva\",\n        \"duet-has-category-icon\": !!this.categoryIcon,\n        \"duet-hero-light\": this.variation === \"light\",\n        \"duet-hero-gray\": this.variation === \"gray\" || this.variation === \"minimal\",\n        \"duet-hero-minimal\": this.variation === \"minimal\",\n        \"duet-hero-with-image\": this.variation === \"image\",\n        \"duet-hero-gray-with-actions\": !!this.processedActions,\n        \"duet-hero-gray-with-back\": !!this.processedBack,\n        \"duet-hero-text-center\": this.textCenter && !this.leftAlign,\n        \"duet-hero-left-align\": this.leftAlign\n      }\n    }, h(\"div\", {\n      class: \"duet-hero-wrapper\"\n    }, this.image && this.variation === \"image\" && h(\"div\", {\n      class: \"duet-hero-image-mask\"\n    }, h(\"div\", {\n      class: \"duet-hero-image-wrapper\"\n    }, h(\"div\", {\n      class: \"duet-hero-image\",\n      style: styles\n    }))), (this.variation === \"gray\" || this.variation === \"light\" || this.variation === \"minimal\") && this.processedBack && h(\"div\", {\n      class: \"duet-hero-back\"\n    }, h(\"duet-button\", {\n      style: buttonStyles,\n      variation: \"plain\",\n      icon: \"action-arrow-left-small\",\n      theme: this.theme,\n      iconSize: \"small\",\n      color: buttonColor,\n      padding: \"none\",\n      margin: \"none\",\n      fixed: true,\n      url: this.processedBack.href,\n      identifier: this.processedBack.id,\n      onClick: event => this.handleClick(event, {\n        label: this.processedBack.label,\n        href: this.processedBack.href,\n        id: this.processedBack.id,\n        analyticsId: this.processedBack.analyticsId\n      })\n    }, this.processedBack.label)), (this.variation === \"gray\" || this.variation === \"minimal\") && this.categoryIcon && h(\"duet-icon\", {\n      class: {\n        \"duet-hero-icon\": true,\n        \"duet-hero-icon-has-heading\": this.preHeading !== \"\"\n      },\n      size: \"x-large\",\n      background: this.categoryIconColor,\n      name: this.categoryIcon\n    }), h(\"div\", {\n      class: \"duet-hero-text\"\n    }, this.preHeading && h(\"duet-paragraph\", {\n      margin: \"none\",\n      class: \"duet-hero-pre\"\n    }, this.preHeading), h(\"slot\", {\n      name: \"badge\"\n    }), h(\"duet-heading\", {\n      theme: this.theme,\n      level: this.level,\n      class: {\n        \"duet-hero-heading\": true,\n        \"duet-hero-heading-has-pre\": this.preHeading !== \"\"\n      },\n      color: this.variation === \"default\" ? \"gray-lightest\" : \"\",\n      visualLevel: this.variation === \"gray\" || this.variation === \"minimal\" ? \"h2\" : \"h1\"\n    }, this.heading), this.description && h(\"duet-paragraph\", {\n      theme: this.theme,\n      color: textColor,\n      variation: \"intro\"\n    }, this.description), (this.variation === \"gray\" || this.variation === \"minimal\") && this.processedListItems && h(\"duet-list\", {\n      theme: this.theme,\n      \"label-width\": \"30\",\n      breakpoint: \"large\",\n      mobile: this.leftAlign ? undefined : \"center\"\n    }, this.processedListItems.map(item => h(\"duet-list-item\", null, h(\"span\", {\n      slot: \"label\"\n    }, item.label), h(\"span\", {\n      slot: \"value\"\n    }, item.value)))), this.buttonLabel && h(\"duet-button\", {\n      url: this.buttonUrl,\n      icon: this.icon,\n      iconRight: this.iconRight,\n      iconSize: this.iconSize,\n      variation: buttonVariation,\n      theme: this.theme,\n      identifier: this.buttonId,\n      onClick: event => this.handleClick(event, this.buttonData),\n      fixed: true\n    }, this.buttonLabel), h(\"span\", {\n      class: \"duet-hero-slot-unnamed\"\n    }, h(\"slot\", null))), (this.variation === \"gray\" || this.variation === \"minimal\") && this.processedActions && h(\"div\", {\n      class: \"duet-hero-links\"\n    }, this.processedActions.map(item => h(\"a\", {\n      class: \"duet-hero-link\",\n      href: item.href,\n      id: item.id,\n      target: item.external ? \"_blank\" : \"_self\",\n      onClick: event => this.handleClick(event, item)\n    }, h(\"div\", {\n      class: \"duet-hero-action-icon\"\n    }, h(\"duet-icon\", {\n      size: \"small\",\n      margin: \"none\",\n      name: item.icon,\n      color: \"currentColor\",\n      outline: outlineColor\n    })), h(\"span\", null, item.label), item.external && h(\"duet-visually-hidden\", null, \", \", this.accessibleLabelExternal), item.external && h(\"div\", {\n      class: \"duet-hero-action-arrow\"\n    }, h(\"duet-icon\", {\n      icon: actionNewWindowSmall.svg,\n      size: \"xx-small\",\n      margin: \"none\",\n      color: \"currentColor\"\n    }))))), this.image && this.variation !== \"image\" && h(\"div\", {\n      class: \"duet-hero-image\",\n      style: styles\n    })));\n  }\n\n  get element() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"back\": [\"refresh\"],\n      \"listItems\": [\"refresh\"],\n      \"actions\": [\"refresh\"]\n    };\n  }\n\n};\nDuetHero.style = duetHeroCss;\nexport { DuetHero as duet_hero };","map":null,"metadata":{},"sourceType":"module"}