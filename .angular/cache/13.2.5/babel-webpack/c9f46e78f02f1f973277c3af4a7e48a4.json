{"ast":null,"code":"import _asyncToGenerator from \"/Users/klaushougesen/_repos/consulting/lahi/github/duet-example-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Built with Duet Design System\n */\nimport { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-795979f3.js';\nimport { c as createID } from './create-id-981107da.js';\nimport { p as parsePossibleJSON } from './string-utils-2f1793b8.js';\nimport { i as inheritGlobalTheme } from './themeable-component-572685dd.js';\nconst duetSelectCss = \"@charset \\\"UTF-8\\\";*.sc-duet-select,*.sc-duet-select::after,*.sc-duet-select::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}.sc-duet-select-h{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-right:16px !important;margin-bottom:12px !important;display:inline-flex;width:100%;max-width:100%;vertical-align:bottom}.sc-duet-select-h:last-child,.sc-duet-select-h:last-of-type{margin-right:0 !important}@media (min-width: 36em){.sc-duet-select-h{width:calc(50% - 16px - 3px)}.duet-expand.sc-duet-select-h{width:100% !important}}.duet-m-0.sc-duet-select-h{margin:0 !important}duet-tooltip.sc-duet-select{position:absolute;top:12px;right:0}@media (min-width: 48em){duet-tooltip.sc-duet-select{position:relative;top:4px;right:auto}}.duet-select-placeholder.sc-duet-select{position:absolute;top:-9px;left:9px;z-index:200;display:block;width:auto;max-width:60%;padding:0 0.25rem;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;background:white}.duet-select-container.sc-duet-select{position:relative;width:100%}.duet-select-wrapper.sc-duet-select{position:relative;width:100%;padding:15px 14px !important;font-family:\\\"localtapiola-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";font-size:1rem;font-weight:400;line-height:1.25}.duet-theme-turva.sc-duet-select .duet-select-wrapper.sc-duet-select{font-family:\\\"turva-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"}.duet-select-wrapper.sc-duet-select::after{content:\\\"  \\\"}.duet-select-wrapper.sc-duet-select select.sc-duet-select{position:absolute;top:0;right:0;bottom:0;left:0;z-index:200;width:100%;height:100%;padding:0;margin:0;font-family:\\\"localtapiola-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";font-size:1rem;cursor:pointer;border:0;outline:none;opacity:0}.duet-theme-turva.sc-duet-select .duet-select-wrapper.sc-duet-select select.sc-duet-select{font-family:\\\"turva-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"}.duet-select-wrapper.sc-duet-select select.sc-duet-select:hover+.duet-select.sc-duet-select{border-color:#909599;box-shadow:0 0 0 1px #909599}.duet-theme-turva.sc-duet-select .duet-select-wrapper.sc-duet-select select.sc-duet-select:hover+.duet-select.sc-duet-select{border-color:#747475;box-shadow:0 0 0 1px #747475}.has-error.sc-duet-select .duet-select-wrapper.sc-duet-select select.sc-duet-select:hover+.duet-select.sc-duet-select{box-shadow:0 0 0 1px #de2362}.duet-theme-turva.has-error.sc-duet-select .duet-select-wrapper.sc-duet-select select.sc-duet-select:hover+.duet-select.sc-duet-select{box-shadow:0 0 0 1px #e02a0d}.duet-select-wrapper.sc-duet-select select.sc-duet-select:focus+.duet-select.sc-duet-select{border-color:#0077b3;outline:0;box-shadow:0 0 0 1px #0077b3;transition:none}.duet-theme-turva.sc-duet-select .duet-select-wrapper.sc-duet-select select.sc-duet-select:focus+.duet-select.sc-duet-select{border-color:#171c3a;box-shadow:0 0 0 1px #171c3a}.duet-theme-turva.sc-duet-select .duet-select-wrapper.sc-duet-select select.sc-duet-select:focus+.duet-select.sc-duet-select .duet-select-icon.sc-duet-select{color:#171c3a}.duet-select-wrapper.sc-duet-select select.sc-duet-select:focus+.duet-select.sc-duet-select .duet-select-icon.sc-duet-select{color:#0077b3}.has-error.sc-duet-select .duet-select-wrapper.sc-duet-select select.sc-duet-select:focus+.duet-select.sc-duet-select{box-shadow:0 0 0 1px #de2362}.duet-theme-turva.has-error.sc-duet-select .duet-select-wrapper.sc-duet-select select.sc-duet-select:focus+.duet-select.sc-duet-select{box-shadow:0 0 0 1px #e02a0d}.duet-select-wrapper.sc-duet-select select[disabled].sc-duet-select{cursor:default !important}.duet-select-wrapper.sc-duet-select select[disabled].sc-duet-select+.duet-select.sc-duet-select{color:#00294d !important;cursor:default !important;background:#f5f8fa !important;border-color:#f5f8fa !important;box-shadow:none !important;opacity:1 !important;-webkit-text-fill-color:#00294d !important}.duet-theme-turva.sc-duet-select .duet-select-wrapper.sc-duet-select select[disabled].sc-duet-select+.duet-select.sc-duet-select{color:#171c3a !important;background:#f5f5f7 !important;border-color:#f5f5f7 !important;-webkit-text-fill-color:#171c3a !important}.duet-select.sc-duet-select{position:absolute;top:0;right:0;bottom:0;left:0;z-index:100;display:block;width:100%;min-width:8rem;padding:12px 14px !important;padding-right:48px !important;overflow:hidden;font-family:\\\"localtapiola-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";font-size:1rem;font-weight:400;font-variant-numeric:tabular-nums;line-height:1.5;color:#00294d;text-align:left;text-overflow:ellipsis;white-space:nowrap;background:white;border:1px solid #909599;border-radius:4px;transition:150ms ease}.has-error.sc-duet-select .duet-select.sc-duet-select{border-color:#de2362 !important}.has-error.sc-duet-select .duet-select.sc-duet-select .duet-select-icon.sc-duet-select{color:#de2362 !important}.duet-theme-turva.has-error.sc-duet-select .duet-select.sc-duet-select{border-color:#e02a0d !important}.duet-theme-turva.has-error.sc-duet-select .duet-select.sc-duet-select .duet-select-icon.sc-duet-select{color:#e02a0d !important}.duet-theme-turva.sc-duet-select .duet-select.sc-duet-select{font-family:\\\"turva-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";color:#171c3a;border-color:#747475}.duet-select.sc-duet-select svg.sc-duet-select{position:absolute;top:50%;right:16px;z-index:200;width:20px;height:20px;color:#00294d;pointer-events:none;transform:translateY(-50%)}.duet-theme-turva.sc-duet-select .duet-select.sc-duet-select svg.sc-duet-select{color:#171c3a}.duet-select-help.sc-duet-select{display:block;font-family:\\\"localtapiola-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";font-size:0.875rem;font-weight:400;line-height:1.25;color:#657787;border-radius:4px}.duet-select-help.sc-duet-select span.sc-duet-select{display:block;margin-top:8px}.duet-theme-turva.sc-duet-select .duet-select-help.sc-duet-select{color:#747475}.has-error.sc-duet-select .duet-select-help.sc-duet-select{color:#de2362}.duet-theme-turva.has-error.sc-duet-select .duet-select-help.sc-duet-select{color:#e02a0d}.duet-label-hidden.sc-duet-select duet-label.sc-duet-select{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0 0 0 0);border:0}\";\n\nfunction isOptionGroup(item) {\n  return \"options\" in item;\n}\n\nfunction findOptionByValue(items, value) {\n  for (var i = 0; i < items.length; i++) {\n    let item = items[i];\n\n    if (isOptionGroup(item)) {\n      item = findOptionByValue(item.options, value);\n    }\n\n    if (item && item.value === value) {\n      return item;\n    }\n  }\n}\n\nlet DuetSelect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.duetChange = createEvent(this, \"duetChange\", 3);\n    this.duetFocus = createEvent(this, \"duetFocus\", 7);\n    this.duetBlur = createEvent(this, \"duetBlur\", 7);\n    /**\n     * Own Properties\n     */\n\n    this.selectId = createID(\"DuetSelect\");\n    this.errorId = createID(\"DuetError\");\n    this.labelId = createID(\"DuetLabel\");\n    this.topCaptionId = createID(\"DuetCaptionTop\");\n    this.topCaptionPlaceholderId = createID(\"DuetCaptionPlaceholderTop\");\n    /**\n     * State() variables\n     * Inlined decorator, alphabetical order.\n     */\n\n    this.processedItems = null;\n    /**\n     * Controls the margin of the component.\n     */\n\n    this.margin = \"auto\";\n    /**\n     * Display the select in error state along with an error message.\n     */\n\n    this.error = \"\";\n    /**\n     * Expands the input to fill 100% of the container width.\n     */\n\n    this.expand = false;\n    /**\n     * Theme of the select.\n     */\n\n    this.theme = \"\";\n    /**\n     * Visually hide the label, but still show it to screen readers.\n     */\n\n    this.labelHidden = false;\n    /**\n     * Hint text to display.\n     */\n\n    this.placeholder = \"\";\n    /**\n     * If form input field has a placeholder text, and user types anything (causing the placeholder text to disappear),\n     * settings this to true will \"echo\" it into the caption slot - this option will be false by default for the next few versions, but will eventually be true by default (scheduled for 4.30.0)\n     */\n\n    this.echoPlaceholder = false;\n    /**\n     * Makes the select component disabled. This prevents users from being able\n     * to interact with the select, and conveys its inactive state to assistive\n     * technologies.\n     */\n\n    this.disabled = false;\n    /**\n     * Set whether the input is required or not. Please note that this is necessary for\n     * accessible inputs when the user is required to fill them. When using this property\n     * you need to also set “novalidate” attribute to your form element to prevent\n     * browser from displaying its own validation errors.\n     */\n\n    this.required = false;\n    /**\n     * Label for the select.\n     */\n\n    this.label = \"label\";\n    /**\n     * Tooltip to display next to the label of the input.\n     */\n\n    this.tooltip = \"\";\n    /**\n     * With direction setting you can force the tooltip to always open towards left\n     * or right instead of automatically determining the direction.\n     */\n\n    this.tooltipDirection = \"auto\";\n    /**\n     * Component event handling.\n     */\n\n    this.onClick = ev => {\n      ev.stopPropagation();\n    };\n\n    this.onChange = () => {\n      this.value = this.nativeSelect.value;\n      this.duetChange.emit({\n        value: this.value,\n        component: \"duet-select\"\n      });\n    };\n\n    this.onBlur = ev => {\n      this.duetBlur.emit({\n        originalEvent: ev,\n        value: this.value,\n        component: \"duet-select\"\n      });\n    };\n\n    this.onFocus = ev => {\n      this.duetFocus.emit({\n        originalEvent: ev,\n        value: this.value,\n        component: \"duet-select\"\n      });\n    };\n  }\n\n  valueChanged() {\n    if (this.nativeSelect) {\n      this.nativeSelect.value = this.value;\n    }\n\n    this.isCaptionVisible = !!this.caption;\n  }\n  /**\n   * Component lifecycle events.\n   */\n\n\n  componentWillLoad() {\n    inheritGlobalTheme(this);\n    this.isCaptionVisible = !!this.caption;\n    this.refresh();\n  }\n  /**\n   * Sets focus on the specified `duet-select`. Use this method instead of the global\n   * `select.focus()`.\n   */\n\n\n  setFocus(options) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.nativeSelect) {\n        _this.nativeSelect.focus(options);\n      }\n    })();\n  }\n  /**\n   * Local methods.\n   */\n\n\n  refresh() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.processedItems = parsePossibleJSON(_this2.items);\n    })();\n  }\n\n  getSelectedItemLabel() {\n    let item;\n\n    if (this.processedItems) {\n      item = findOptionByValue(this.processedItems, this.value);\n    }\n\n    return item ? item.label : this.placeholder || \"\";\n  }\n\n  renderOption(option) {\n    return h(\"option\", {\n      value: option.value,\n      key: option.value,\n      selected: this.value === option.value,\n      disabled: option.disabled\n    }, option.label);\n  }\n\n  renderOptionGroup(group) {\n    return h(\"optgroup\", {\n      key: group.label,\n      label: group.label,\n      disabled: group.disabled\n    }, group.options.map(option => this.renderOption(option)));\n  }\n  /**\n   * render() function\n   * Always the last one in the class.\n   */\n\n\n  render() {\n    const identifier = this.identifier || this.selectId;\n    return h(Host, {\n      onClick: this.onClick,\n      class: {\n        \"duet-m-0\": this.margin === \"none\",\n        \"duet-expand\": this.expand\n      }\n    }, h(\"div\", {\n      class: {\n        \"duet-select-container\": true,\n        \"duet-label-hidden\": this.labelHidden,\n        \"duet-theme-turva\": this.theme === \"turva\",\n        \"duet-input-top-caption-shown\": this.isCaptionVisible,\n        \"has-error\": !!this.error\n      }\n    }, h(\"duet-label\", {\n      theme: this.theme === \"turva\" ? \"turva\" : \"default\",\n      class: {\n        \"duet-has-tooltip\": !!this.tooltip\n      },\n      id: this.labelId,\n      for: identifier\n    }, this.label), this.tooltip && h(\"duet-tooltip\", {\n      direction: this.tooltipDirection,\n      accessibleInputLabel: this.label\n    }, this.tooltip), this.caption && h(\"duet-caption\", {\n      id: this.topCaptionId,\n      size: \"medium\"\n    }, this.caption), h(\"div\", {\n      class: \"duet-select-wrapper\"\n    }, this.placeholder && this.echoPlaceholder && this.value && h(\"duet-caption\", {\n      id: this.topCaptionPlaceholderId,\n      class: \"duet-select-placeholder\",\n      size: \"small\"\n    }, this.placeholder), h(\"select\", {\n      ref: select => this.nativeSelect = select,\n      disabled: this.disabled,\n      name: this.name,\n      id: identifier,\n      role: this.role,\n      \"aria-labelledby\": `${this.labelId} ${this.errorId}`,\n      \"aria-controls\": this.accessibleControls,\n      \"aria-activedescendant\": this.accessibleActiveDescendant,\n      \"aria-owns\": this.accessibleOwns,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onChange: this.onChange,\n      required: this.required,\n      \"aria-describedby\": this.accessibleDescribedBy\n    }, this.placeholder && h(\"option\", {\n      disabled: true,\n      selected: true,\n      value: \"\"\n    }, this.placeholder), !this.processedItems ? h(\"option\", null, \"Virhe valintoja ladattaessa. P\\u00E4ivit\\u00E4 sivu ja kokeile uusiksi.\") : this.processedItems.map(item => {\n      return isOptionGroup(item) ? this.renderOptionGroup(item) : this.renderOption(item);\n    })), h(\"div\", {\n      class: \"duet-select\",\n      \"aria-hidden\": \"true\"\n    }, h(\"span\", {\n      key: this.value\n    }, this.getSelectedItemLabel()), h(\"svg\", {\n      role: \"img\",\n      class: \"duet-select-icon\",\n      fill: \"currentColor\",\n      viewBox: \"0 0 24 24\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, h(\"path\", {\n      d: \"m12 18.999c-.4 0-.776-.156-1.059-.438l-10.721-10.72c-.142-.142-.22-.33-.22-.531 0-.2.078-.389.22-.53.142-.142.33-.22.53-.22s.389.078.53.22l10.72 10.719 10.72-10.719c.142-.142.33-.22.53-.22s.389.078.53.22c.142.142.22.33.22.53s-.078.389-.22.53l-10.72 10.72c-.282.283-.659.439-1.06.439z\"\n    })))), h(\"span\", {\n      class: \"duet-select-help\",\n      id: this.errorId,\n      \"aria-live\": \"assertive\",\n      \"aria-relevant\": \"additions removals\"\n    }, this.error && h(\"span\", null, this.error))));\n  }\n\n  get element() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"value\": [\"valueChanged\"],\n      \"items\": [\"refresh\"]\n    };\n  }\n\n};\nDuetSelect.style = duetSelectCss;\nexport { DuetSelect as duet_select };","map":null,"metadata":{},"sourceType":"module"}