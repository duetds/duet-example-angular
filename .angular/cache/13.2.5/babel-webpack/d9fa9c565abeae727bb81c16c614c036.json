{"ast":null,"code":"import _asyncToGenerator from \"/Users/klaushougesen/_repos/consulting/lahi/github/duet-example-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Built with Duet Design System\n */\nimport { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-795979f3.js';\nimport { a as actionArrowDownSmall } from './action-arrow-down-small-82273dc8.js';\nimport { f as font_size_medium, t as tokens } from './tokens-e110dc89.js';\nimport { c as createID } from './create-id-981107da.js';\nimport { i as isKeyboardClick } from './keyboard-utils-584cedd7.js';\nimport { s as sanitizeString } from './string-utils-2f1793b8.js';\nimport { i as inheritGlobalTheme } from './themeable-component-572685dd.js';\nconst duetCollapsibleCss = \"*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;margin-bottom:16px !important;display:block;font-family:\\\"localtapiola-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";font-size:1rem;font-weight:600;line-height:1.5;color:#00294d}:host(.duet-theme-turva){font-family:\\\"turva-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";color:#171c3a}:host(.duet-m-0){margin:0 !important}.duet-collapsible-content{display:none;padding-left:18px;margin-top:8px;font-family:\\\"localtapiola-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";font-size:1rem;font-weight:400;font-variant-numeric:tabular-nums;-webkit-hyphens:auto;hyphens:auto;line-height:1.5;color:#00294d}@media (max-width: 35.9375em){.duet-collapsible-content{font-size:0.875rem}}.duet-collapsible-content.duet-theme-turva{font-family:\\\"turva-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";color:#171c3a}:host([open]) .duet-collapsible-content{display:block}.duet-collapsible-heading{-webkit-user-select:none;user-select:none;display:flex;align-items:center;font-family:\\\"localtapiola-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";font-size:1rem;font-weight:600;line-height:1.5;color:#00294d;cursor:pointer;border-radius:4px}.duet-collapsible-heading.duet-collapsible-normal-weight{font-weight:400}.duet-collapsible-heading.duet-theme-turva{font-family:\\\"turva-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";color:#171c3a}.duet-collapsible-heading .duet-collapsible-heading-content{flex:1}.duet-collapsible-heading:focus{outline:0}:host(.user-is-tabbing) .duet-collapsible-heading:focus{border-radius:4px;box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}:host(.user-is-tabbing.duet-theme-turva) .duet-collapsible-heading:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}.duet-collapsible-heading-icon{margin-right:8px !important;display:flex;align-items:center;justify-content:center;color:#00294d;transition:transform 300ms ease}.duet-collapsible-heading-icon:last-child,.duet-collapsible-heading-icon:last-of-type{margin-right:0 !important}[aria-expanded=true] .duet-collapsible-heading-icon{transform:rotate(180deg)}\";\nlet DuetCollapsible = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.duetToggle = createEvent(this, \"duetToggle\", 7);\n    this.id = createID(\"DuetCollapsible\");\n    /**\n     * Theme of the collapsible.\n     */\n\n    this.theme = \"\";\n    /**\n     * The content for the collapsible heading.\n     */\n\n    this.heading = \"\";\n    /**\n     * The font weight of the heading\n     */\n\n    this.headingWeight = \"semibold\";\n    /**\n     * Custom headingSize to be used for font size of heading, as a design token entered\n     * in kebab-case x-small -> font-size-x-small.\n     * Example:\n     * # 12px (0.75rem)  ------  +2px   (x-small)\n     * # 14px (0.875rem) ------  +2px   (small)\n     * # 16px (1rem)     ------  +2px   (medium)\n     * # 20px (1.25rem)  ------  +4px   (large)\n     * # 24px (1.5rem)   ------  +4px   (x-large)\n     * # 36px (2.25rem)  ------  +12px  (xx-large)\n     * # 48px (3rem)     ------  +12px  (xxx-large)\n     * # 72px (4.5rem)   ------  +24px  (xxxx-large)\n     */\n\n    this.headingSize = undefined;\n    /**\n     * The actual heading level used for the heading in html markup. This setting\n     * exists for accessibility reasons. It doesnâ€™t change the style visually.\n     * only variations of h1-h6 area accepted\n     */\n\n    this.headingLevel = undefined;\n    /**\n     * Controls the margin of the component.\n     */\n\n    this.margin = \"auto\";\n    /**\n     * Is the component expanded or collapsed.\n     */\n\n    this.open = false;\n\n    this.handleKeyDown = e => {\n      if (isKeyboardClick(e)) {\n        this.handleClick(e);\n      }\n    };\n\n    this.getFontSizeFromTokens = (fontSize = this.headingSize) => {\n      if (!fontSize) {\n        return font_size_medium;\n      } else {\n        const searchRegExp = /-/g;\n        const fontSizeReplaced = fontSize.replace(searchRegExp, \"_\");\n        return tokens[`font_size_${fontSizeReplaced}`];\n      }\n    };\n\n    this.getEquivalentIconSize = (fontSize = this.headingSize) => {\n      switch (fontSize) {\n        case \"x-small\":\n          return \"xx-small\";\n\n        case \"small\":\n          return \"xx-small\";\n\n        case \"medium\":\n          return \"xx-small\";\n\n        case \"large\":\n          return \"x-small\";\n\n        case \"x-large\":\n          return \"small\";\n\n        case \"xx-large\":\n          return \"medium\";\n\n        case \"xxx-large\":\n          return \"x-large\";\n\n        case \"xxxx-large\":\n          return \"xxx-large\";\n\n        default:\n          // default size\n          return \"xx-small\";\n      }\n    };\n\n    this.handleClick = e => {\n      e.preventDefault();\n      this.open = !this.open;\n      this.duetToggle.emit({\n        component: \"duet-collapsible\",\n        originalEvent: e\n      });\n    };\n  }\n  /**\n   * Component lifecycle events.\n   */\n\n\n  componentWillLoad() {\n    inheritGlobalTheme(this);\n  }\n  /**\n   * Sets focus on the specified `duet-collapsible`. Use this method instead of the global\n   * `collapsible.focus()`.\n   */\n\n\n  setFocus(options) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.nativeButton) {\n        _this.element.classList.add(\"user-is-tabbing\");\n\n        _this.nativeButton.focus(options);\n      }\n    })();\n  }\n  /**\n   * render() function\n   * Always the last one in the class.\n   */\n\n\n  render() {\n    const HeadingTagName = this.headingLevel ? sanitizeString(this.headingLevel) : \"div\";\n    return h(Host, {\n      class: {\n        \"duet-m-0\": this.margin === \"none\"\n      }\n    }, h(HeadingTagName, {\n      class: {\n        \"duet-collapsible-heading\": true,\n        \"duet-theme-turva\": this.theme === \"turva\",\n        \"duet-collapsible-normal-weight\": this.headingWeight === \"normal\"\n      },\n      style: {\n        \"font-size\": this.getFontSizeFromTokens()\n      },\n      role: \"button\",\n      tabindex: \"0\",\n      ref: button => this.nativeButton = button,\n      \"aria-expanded\": this.open ? \"true\" : \"false\",\n      \"aria-controls\": this.id,\n      onClick: this.handleClick,\n      onKeyDown: this.handleKeyDown\n    }, h(\"div\", {\n      class: \"duet-collapsible-heading-icon\"\n    }, h(\"duet-icon\", {\n      margin: \"none\",\n      color: this.theme === \"turva\" ? \"secondary-turva\" : \"secondary\",\n      size: this.getEquivalentIconSize(),\n      icon: actionArrowDownSmall.svg\n    })), h(\"div\", {\n      class: \"duet-collapsible-heading-content\",\n      part: \"duet-collapsible-heading-content\"\n    }, this.heading)), h(\"div\", {\n      id: this.id,\n      class: {\n        \"duet-collapsible-content\": true,\n        \"duet-theme-turva\": this.theme === \"turva\"\n      }\n    }, h(\"slot\", null)));\n  }\n\n  get element() {\n    return getElement(this);\n  }\n\n};\nDuetCollapsible.style = duetCollapsibleCss;\nexport { DuetCollapsible as duet_collapsible };","map":null,"metadata":{},"sourceType":"module"}