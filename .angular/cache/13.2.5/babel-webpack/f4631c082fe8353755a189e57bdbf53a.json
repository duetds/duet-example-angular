{"ast":null,"code":"import _asyncToGenerator from \"/Users/klaushougesen/_repos/consulting/lahi/github/duet-example-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Built with Duet Design System\n */\nimport { r as registerInstance, h, H as Host, g as getElement } from './index-795979f3.js';\nimport { c as createID } from './create-id-981107da.js';\nimport { a as getLanguage, g as getLocaleString } from './language-utils-344d894c.js';\nimport { i as inheritGlobalTheme } from './themeable-component-572685dd.js';\nimport './string-utils-2f1793b8.js';\nconst duetTooltipCss = \"*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;position:relative;z-index:200;display:inline-flex;width:auto;margin-top:-16px !important;margin-left:-3px !important;-webkit-tap-highlight-color:transparent}.duet-tooltip{position:absolute;right:-21px;bottom:100%;z-index:950;display:block;width:282px;min-height:48px;max-height:340px;font-family:\\\"localtapiola-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";font-size:0.875rem;font-weight:400;line-height:1.25;color:#00294d;visibility:hidden;background:white;border:1px solid #e1e3e6;border-radius:4px;box-shadow:0 2px 10px 0 rgba(0, 41, 77, 0.07);opacity:0;transition:300ms ease;transform:scale(0.9) translateZ(0) translateY(20px);transform-origin:100% 100%}.duet-tooltip.duet-theme-turva{font-family:\\\"turva-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";color:#171c3a;border-color:#e4e4e6;box-shadow:0 2px 10px 0 rgba(117, 117, 117, 0.13)}.duet-tooltip::after{position:absolute;right:22px;bottom:-20px;z-index:200;width:0;height:0;content:\\\"\\\";border:10px solid transparent;border-top:10px solid white}.duet-tooltip::before{position:absolute;right:21px;bottom:-22px;z-index:100;width:0;height:0;content:\\\"\\\";border:11px solid transparent;border-top:11px solid #e1e3e6}.duet-theme-turva .duet-tooltip::before{border-top:11px solid #e4e4e6}.duet-tooltip.duet-tooltip-down{top:100%;bottom:auto;transform:scale(0.9) translateZ(0) translateY(-20px);transform-origin:100% 0}.duet-tooltip.duet-tooltip-down::after{top:-20px;bottom:auto;border:10px solid transparent;border-bottom:10px solid white}.duet-tooltip.duet-tooltip-down::before{top:-22px;bottom:auto;border:11px solid transparent;border-bottom:11px solid #e1e3e6}.duet-theme-turva .duet-tooltip.duet-tooltip-down::before{border-bottom:11px solid #e4e4e6}.duet-tooltip.duet-tooltip-left{right:-21px !important;transform-origin:100% 100% !important}.duet-tooltip.duet-tooltip-left::after{right:22px !important;transform:none !important}.duet-tooltip.duet-tooltip-left::before{right:21px !important;transform:none !important}.duet-tooltip.duet-tooltip-right{right:auto !important;left:-9px !important;transform-origin:100% 100% !important}.duet-tooltip.duet-tooltip-right::after{right:auto !important;left:22px !important;transform:none !important}.duet-tooltip.duet-tooltip-right::before{right:auto !important;left:21px !important;transform:none !important}.duet-tooltip.duet-tooltip-has-label{right:auto !important;left:0;width:282px !important;transform-origin:0 0 !important}.duet-tooltip.duet-tooltip-has-label::after{right:auto !important;left:1px !important;transform:none !important}.duet-tooltip.duet-tooltip-has-label::before{right:auto !important;left:0 !important;transform:none !important}.duet-tooltip.duet-tooltip-active{visibility:visible;opacity:1;transition-property:transform, opacity;transform:scale(1.0001) translateZ(0) translateY(-8px)}.duet-tooltip.duet-tooltip-active.duet-tooltip-down{transform:scale(1.0001) translateZ(0) translateY(8px)}.duet-tooltip-button{z-index:100;display:inline-block;align-items:center;justify-content:center;min-width:48px;height:48px;padding:0 !important;margin-right:-12px;line-height:normal !important;color:#0077b3;white-space:nowrap;cursor:pointer;background:transparent !important;border-radius:4px}.duet-tooltip-button.duet-theme-turva{color:#c60c30}.duet-tooltip-button:hover{color:#004d80}.duet-tooltip-button:hover.duet-theme-turva{color:#940925}.duet-tooltip-button:focus{background:transparent !important;outline:0}:host(.user-is-tabbing) .duet-tooltip-button:focus{background:transparent !important;box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3 !important}:host(.user-is-tabbing) .duet-tooltip-button.duet-theme-turva:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a !important}.duet-tooltip-button svg{width:20px;height:20px;pointer-events:none}.duet-tooltip-button-has-label{margin-right:0}.duet-tooltip-scrollable{padding:20px !important;width:100%;max-height:250px;padding-right:25px !important;overflow-y:auto;-webkit-hyphens:auto;hyphens:auto;border-radius:4px;-webkit-overflow-scrolling:touch}.duet-tooltip-scrollable:focus{outline:none}:host(.user-is-tabbing) .duet-tooltip-scrollable:focus{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}:host(.user-is-tabbing) .duet-theme-turva .duet-tooltip-scrollable:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}.duet-tooltip-scrollable::-webkit-scrollbar{width:4px}.duet-tooltip-scrollable::-webkit-scrollbar-track{border-radius:4px}.duet-tooltip-scrollable::-webkit-scrollbar-thumb{background:#e1e3e6;border-radius:4px}.duet-theme-turva .duet-tooltip-scrollable::-webkit-scrollbar-thumb{background:#e4e4e6}.duet-tooltip-label{position:relative;z-index:100;display:inline-block;max-width:calc(100% - 30px);margin-left:12px !important;font-family:\\\"localtapiola-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";font-size:1rem;font-weight:600;line-height:1.25;text-align:left;white-space:normal;vertical-align:top}.duet-theme-turva .duet-tooltip-label{font-family:\\\"turva-sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"}.duet-tooltip-close{position:absolute;top:8px;right:8px;display:flex;align-items:center;justify-content:center;width:17px;height:17px;min-height:0 !important;padding:0 !important;margin:0 !important;line-height:normal;color:#00294d;cursor:pointer;background:#f5f8fa;border-radius:50%;-webkit-appearance:none;appearance:none}.duet-tooltip-close:focus{outline:none;box-shadow:0 0 0 2px #0077b3}.duet-theme-turva .duet-tooltip-close:focus{color:#171c3a;box-shadow:0 0 0 2px #171c3a}@media (min-width: 48em){.duet-tooltip.duet-mq-medium{right:-148px;width:320px;transform-origin:50% 100%}.duet-tooltip.duet-mq-medium::after{right:50%;transform:translateX(50%)}.duet-tooltip.duet-mq-medium::before{right:50%;transform:translateX(50%)}.duet-tooltip.duet-mq-medium.duet-tooltip-down{transform-origin:50% 0}}@media (min-width: 62em){.duet-tooltip.duet-mq-large{right:-148px;width:320px;transform-origin:50% 100%}.duet-tooltip.duet-mq-large::after{right:50%;transform:translateX(50%)}.duet-tooltip.duet-mq-large::before{right:50%;transform:translateX(50%)}.duet-tooltip.duet-mq-large.duet-tooltip-down{transform-origin:50% 0}}\";\nlet DuetTooltip = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Own Properties.\n     */\n\n    this.tooltipId = createID(\"DuetTooltip\");\n    this.lastScrollTop = 0;\n    /**\n     * State() variables\n     * Inlined decorator, alphabetical order.\n     */\n\n    this.openDown = false;\n    /**\n     * Theme of the tooltip.\n     */\n\n    this.theme = \"\";\n    /**\n     * The currently active language. This setting changes the accessible labels to match the\n     * chosen language.\n     * @deprecated this is now handled via the html lang tag, and is no longer used - kept to avoid breaking changes and ease unit testing\n     * @default \"fi\"\n     */\n\n    this.language = getLanguage();\n    /**\n     * Default language strings for the accessibleLabel\n     * @default {fi: \"Näytä lisätietoja\", en: \"See more information\", sv: \"Se mer information\"}\n     */\n\n    this.accessibleLabelDefault = {\n      fi: \"Näytä lisätietoja\",\n      en: \"Show more information\",\n      sv: \"Visa mer tilläggsuppgifter\"\n    };\n    /**\n     * Adds accessible label for the info icon that is only shown for screen\n     * readers. This property is always required to create an accessible interface!\n     * @default {fi: \"Näytä lisätietoja\", en: \"See more information\", sv: \"Se mer information\"}\n     */\n\n    this.accessibleLabel = getLocaleString(this.accessibleLabelDefault, this.language);\n    /**\n     * Default language strings for the accessibleCloseLabel\n     * @default {fi: \"Sulje lisätiedot\", en: \"Close details\", sv: \"Stäng detaljer\"}\n     */\n\n    this.accessibleCloseLabelDefault = {\n      fi: \"Sulje lisätiedot\",\n      en: \"Close details\",\n      sv: \"Stäng tilläggsuppgifter\"\n    };\n    /**\n     * Adds accessible label for the close icon that is only shown for screen\n     * readers. This property is always required to create an accessibly interface!\n     * @default {fi: \"Sulje lisätiedot\", en: \"Close details\", sv: \"Stäng detaljer\"}\n     */\n\n    this.accessibleCloseLabel = getLocaleString(this.accessibleCloseLabelDefault, this.language);\n    /**\n     * Label of the tooltip. If used, replaces the accessibleLabel option.\n     */\n\n    this.label = \"\";\n    /**\n     * Adjust the responsive breakpoint where tooltip starts opening towards left.\n     */\n\n    this.breakpoint = \"medium\";\n    /**\n     * With direction setting you can force the tooltip to always open towards left\n     * or right instead of automatically determining the direction.\n     */\n\n    this.direction = \"auto\";\n    /**\n     * Adjust the vertical positioning of the tooltip toggle in pixels. Can be a\n     * negative value as well. E.g. \"-13px\".\n     */\n\n    this.positionVertical = \"0\";\n    /**\n     * Adjust the horizontal positioning of the tooltip toggle in pixels. Can be a\n     * negative value as well. E.g. \"-13px\".\n     */\n\n    this.positionHorizontal = \"0\";\n    /**\n     * Toggle whether the tooltip is initially visible or not. This property should\n     * not be used in production in most cases.\n     */\n\n    this.active = false;\n    /**\n     * Local methods\n     */\n\n    this.openTooltip = () => {\n      this.focusTarget = \"tooltip\";\n      this.active = true;\n    };\n\n    this.closeTooltip = (moveFocusToButton = false) => {\n      if (moveFocusToButton) {\n        this.focusTarget = \"trigger\";\n      }\n\n      this.active = false;\n    };\n\n    this.toggleOpen = () => {\n      this.active ? this.closeTooltip() : this.openTooltip();\n    };\n\n    this.handleFocusOut = e => {\n      if (!this.active) {\n        return;\n      }\n\n      const relatedTarget = e.relatedTarget;\n\n      if ( // if we don't know where focus went\n      relatedTarget == null || // if focus is within the tooltip itself\n      this.element.shadowRoot.contains(relatedTarget) || // if focus is within the tooltip light DOM\n      this.element.contains(relatedTarget)) {\n        // then we can skip closing\n        return;\n      }\n\n      this.closeTooltip();\n    };\n\n    this.handleKeyDown = e => {\n      const isEscapeKey = e.keyCode === 27;\n      const isTabbingOut = e.target === this.scrollableEl && e.shiftKey && e.keyCode === 9;\n\n      if (isEscapeKey || isTabbingOut) {\n        this.closeTooltip(true);\n      }\n    };\n\n    this.handleCloseClick = () => {\n      this.closeTooltip(true);\n    };\n\n    this.isElementInViewport = el => {\n      if (!el) {\n        return false;\n      }\n\n      var rect = el.getBoundingClientRect();\n      return (// This takes the possible Nav component into account\n        rect.top >= 100 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n      );\n    };\n  }\n  /**\n   * Component lifecycle events.\n   */\n\n\n  componentWillLoad() {\n    inheritGlobalTheme(this);\n  }\n\n  componentDidUpdate() {\n    switch (this.focusTarget) {\n      case \"tooltip\":\n        this.scrollableEl.focus({\n          preventScroll: true\n        });\n        break;\n\n      case \"trigger\":\n        this.buttonEl.focus({\n          preventScroll: true\n        });\n        break;\n    }\n\n    this.focusTarget = null;\n  }\n  /**\n   * Component event handling.\n   */\n\n\n  onScroll() {\n    clearTimeout(this.scrollTimer);\n    this.scrollTimer = setTimeout(() => {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n      if (!this.isElementInViewport(this.tooltipEl)) {\n        this.openDown = scrollTop > this.lastScrollTop;\n      }\n\n      this.lastScrollTop = Math.max(0, scrollTop);\n    }, 100);\n  }\n\n  handleDocumentClick(e) {\n    if (!this.active) {\n      return;\n    }\n\n    const path = e.composedPath();\n    const isClickOutside = path.every(el => el !== this.element);\n\n    if (isClickOutside) {\n      this.closeTooltip();\n    }\n  }\n\n  handleActiveChange(newActiveValue) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (newActiveValue) {\n        _this.openDown = !_this.isElementInViewport(_this.tooltipEl);\n      } else {\n        setTimeout(() => _this.openDown = false, 300);\n      }\n    })();\n  }\n  /**\n   * render() function.\n   * Always the last one in the class.\n   */\n\n\n  render() {\n    const tooltipStyles = {\n      transform: `translateY(${this.positionVertical}) translateX(${this.positionHorizontal})`,\n      // This is needed to that the active tooltip stacks on\n      // top of other tooltips and the header.\n      zIndex: this.active ? \"201\" : \"\"\n    };\n    return h(Host, {\n      style: tooltipStyles\n    }, h(\"button\", {\n      ref: element => this.buttonEl = element,\n      \"aria-controls\": this.tooltipId,\n      \"aria-expanded\": this.active ? \"true\" : \"false\",\n      onClick: this.toggleOpen,\n      type: \"button\",\n      class: {\n        \"duet-tooltip-button\": true,\n        \"duet-tooltip-button-has-label\": !!this.label,\n        \"duet-theme-turva\": this.theme === \"turva\"\n      }\n    }, h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      role: \"img\",\n      fill: \"currentColor\",\n      viewBox: \"0 0 24 24\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, h(\"path\", {\n      d: \"m13.5 17.25c-1.241 0-2.25-1.009-2.25-2.25v-3.75h-.75c-.414 0-.75-.336-.75-.75s.336-.75.75-.75h.75c.827 0 1.5.673 1.5 1.5v3.75c0 .414.336.75.75.75h.75c.414 0 .75.336.75.75s-.336.75-.75.75z\"\n    }), h(\"circle\", {\n      cx: \"11.625\",\n      cy: \"7.125\",\n      r: \"1.125\"\n    }), h(\"path\", {\n      d: \"m12 24c-6.617 0-12-5.383-12-12s5.383-12 12-12 12 5.383 12 12-5.383 12-12 12zm0-22.5c-5.79 0-10.5 4.71-10.5 10.5s4.71 10.5 10.5 10.5 10.5-4.71 10.5-10.5-4.71-10.5-10.5-10.5z\"\n    })), this.label ? h(\"span\", {\n      class: \"duet-tooltip-label\"\n    }, this.label) : h(\"duet-visually-hidden\", null, this.accessibleInputLabel ? `${this.accessibleInputLabel}, ${this.accessibleLabel}` : this.accessibleLabel)), h(\"div\", {\n      ref: element => this.tooltipEl = element,\n      class: {\n        \"duet-tooltip\": true,\n        \"duet-mq-large\": this.breakpoint === \"large\",\n        \"duet-mq-medium\": this.breakpoint === \"medium\",\n        \"duet-theme-turva\": this.theme === \"turva\",\n        \"duet-tooltip-down\": this.openDown,\n        \"duet-tooltip-has-label\": !!this.label,\n        \"duet-tooltip-left\": this.direction === \"left\",\n        \"duet-tooltip-right\": this.direction === \"right\",\n        \"duet-tooltip-active\": this.active === true\n      },\n      onClick: e => e.stopPropagation(),\n      onKeyDown: this.handleKeyDown,\n      onFocusout: this.handleFocusOut\n    }, h(\"div\", {\n      ref: element => this.scrollableEl = element,\n      class: \"duet-tooltip-scrollable\",\n      tabindex: \"0\",\n      id: this.tooltipId\n    }, h(\"slot\", null)), h(\"button\", {\n      type: \"button\",\n      class: \"duet-tooltip-close\",\n      onClick: this.handleCloseClick\n    }, h(\"duet-icon\", {\n      name: \"navigation-close-small\",\n      margin: \"none\",\n      color: \"currentColor\",\n      size: \"xxx-small\"\n    }), h(\"duet-visually-hidden\", null, this.accessibleCloseLabel))));\n  }\n\n  get element() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"active\": [\"handleActiveChange\"]\n    };\n  }\n\n};\nDuetTooltip.style = duetTooltipCss;\nexport { DuetTooltip as duet_tooltip };","map":null,"metadata":{},"sourceType":"module"}