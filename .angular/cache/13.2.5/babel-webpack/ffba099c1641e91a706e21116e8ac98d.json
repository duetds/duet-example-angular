{"ast":null,"code":"/*!\n * Built with Duet Design System\n */\nimport { r as registerInstance, c as createEvent, h, g as getElement } from './index-eb374972.js';\nimport { g as getLocaleString } from './language-utils-344d894c.js';\nimport { i as inheritGlobalTheme } from './themeable-component-572685dd.js';\nimport { g as getColorByName } from './token-utils-75f78ca4.js';\nimport './string-utils-2f1793b8.js';\nimport './tokens.module-49cbf963.js';\nconst duetEditableTableButtonCss = \"*.sc-duet-editable-table-button,*.sc-duet-editable-table-button::after,*.sc-duet-editable-table-button::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}.sc-duet-editable-table-button-h button.sc-duet-editable-table-button{display:flex;align-content:space-between;justify-content:center;min-width:32px;max-width:32px;height:100%;min-height:32px;max-height:32px;padding:0;margin:0;cursor:pointer !important;background-color:transparent;border:1px solid;border-radius:50%}.sc-duet-editable-table-button-h button.sc-duet-editable-table-button duet-icon.sc-duet-editable-table-button{align-self:center}\";\nlet DuetEditableTableButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.duetEditableItemAction = createEvent(this, \"duetEditableItemAction\", 7);\n    this.isHovering = false;\n    /**\n     * Theme of the empty state component.\n     */\n\n    this.theme = undefined;\n    /**\n     * action items passed from host component\n     * @internal\n     */\n\n    this.actions = undefined;\n    /**\n     * uid that gets passed along when the action is emitted\n     * @internal\n     */\n\n    this.uid = \"\";\n    /**\n     * group associated with action\n     * @internal\n     */\n\n    this.group = \"\";\n    /**\n     * key of the item in the map\n     * @internal\n     */\n\n    this.keyName = \"\";\n\n    this.onMouseEnter = () => {\n      this.isHovering = true;\n    };\n\n    this.onMouseLeave = () => {\n      this.isHovering = false;\n    };\n\n    this.getColours = (byName = false) => {\n      let colorHover = this.actions.color_hover;\n      let colorBlur = this.actions.color;\n\n      if (byName) {\n        colorHover = getColorByName(this.actions.color_hover, this.theme);\n        colorBlur = getColorByName(this.actions.color, this.theme);\n      }\n\n      return this.isHovering ? colorHover : colorBlur;\n    };\n  }\n  /**\n   /**\n   * Component lifecycle events.\n   */\n\n\n  componentWillLoad() {\n    inheritGlobalTheme(this);\n  }\n  /**\n   /**\n   * private functions\n   */\n\n\n  emitActionEvent(ev) {\n    this.duetEditableItemAction.emit({\n      originalEvent: ev,\n      uid: this.uid,\n      group: this.group,\n      action: this.actions.id,\n      keyName: this.keyName,\n      component: \"duet-editable-table-item\"\n    });\n  }\n  /**\n   * render() function\n   * Always the last one in the class.\n   */\n\n\n  render() {\n    return h(\"button\", {\n      style: {\n        \"border-color\": this.getColours(true)\n      },\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n      role: \"menuitem\",\n      class: \"duet-editable-table-actions-items-button\",\n      \"aria-label\": this.actions.label ? getLocaleString(this.actions.label) : undefined,\n      onClick: ev => this.emitActionEvent(ev)\n    }, h(\"duet-icon\", {\n      class: \"duet-editable-table-actions-items-icon\",\n      size: \"x-small\",\n      name: this.actions.icon,\n      color: this.getColours(),\n      margin: \"none\"\n    }));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n};\nDuetEditableTableButton.style = duetEditableTableButtonCss;\nexport { DuetEditableTableButton as duet_editable_table_button };","map":null,"metadata":{},"sourceType":"module"}